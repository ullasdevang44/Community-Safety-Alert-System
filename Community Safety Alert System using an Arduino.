// Pin Definitions
const int buttonPin = 2;     // Button to trigger the alert
const int ledPin = 13;       // LED to show alert
const int buzzerPin = 12;    // Buzzer to sound the alert

// Variables
int buttonState = 0;         // Variable to store current button state
int lastButtonState = 0;     // Variable to store previous button state
bool alertTriggered = false; // To check if alert is triggered

void setup() {
  // Initialize pins
  pinMode(buttonPin, INPUT);  // Set button pin as input
  pinMode(ledPin, OUTPUT);    // Set LED pin as output
  pinMode(buzzerPin, OUTPUT); // Set buzzer pin as output

  // Start Serial Monitor for debug messages (optional)
  Serial.begin(9600);
}

void loop() {
  // Read the current state of the button
  buttonState = digitalRead(buttonPin);

  // Check if button is pressed (HIGH)
  if (buttonState == HIGH && lastButtonState == LOW) {
    // Trigger alert when button is pressed
    alertTriggered = true;
    Serial.println("Alert Triggered!"); // Print alert message to Serial Monitor
    delay(50); // Debounce delay to avoid false triggers
  }

  // If an alert is triggered, activate the LED and Buzzer
  if (alertTriggered) {
    // Turn on the LED and Buzzer to indicate an alert
    digitalWrite(ledPin, HIGH);
    digitalWrite(buzzerPin, HIGH);
    delay(1000);  // Keep the alert active for 1 second

    // After 1 second, reset the LED and Buzzer to indicate the end of the alert
    digitalWrite(ledPin, LOW);
    digitalWrite(buzzerPin, LOW);
    alertTriggered = false; // Reset the alert status
  }

  // Save the current button state for the next loop
  lastButtonState = buttonState;

  // Add a small delay to avoid excessive checking
  delay(10);
}
